{"version":3,"file":"component---src-pages-posts-js-077a149cbd4f0cf7e1da.js","mappings":"yKAgCA,MAzBiBA,KACf,MAAMC,EAAO,kBACb,IAAI,EAACC,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,SAEjC,MAAMC,GAAcC,EAAAA,EAAAA,cAAY,KAChB,UAAVJ,IACFC,EAAS,QACTI,aAAaC,QAAQP,EAAM,SAEf,SAAVC,IACFC,EAAS,SACTI,aAAaC,QAAQP,EAAM,SAC7B,GACC,CAACC,IASJ,OAPAO,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaH,aAAaI,QAAQV,GACpCS,GACFP,EAASO,EACX,GACC,IAEI,CAACR,EAAOG,EAAY,E,oBCc7B,MA3BeO,IAAmB,IAAlB,SAAEC,GAAUD,EAE1B,MAAOV,EAAOG,GAAeL,IAgB7B,OAbAS,EAAAA,EAAAA,YAAU,KACR,MAAMK,EAAOC,SAASC,gBAER,SAAVd,IACFY,SAAAA,EAAMG,UAAUC,OAAO,gBACvBJ,SAAAA,EAAMG,UAAUE,IAAI,gBAER,UAAVjB,IACFY,SAAAA,EAAMG,UAAUC,OAAO,eACvBJ,SAAAA,EAAMG,UAAUE,IAAI,gBACtB,GACC,CAACjB,IAGFkB,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,EAAM,CAACnB,MAAOA,EAAOoB,OAAQjB,IAC9Be,EAAAA,cAAAA,EAAAA,SAAA,KAAGP,GACHO,EAAAA,cAACG,EAAAA,EAAM,MACH,C,8ICLV,MAzBiBC,KACf,MAAMC,GCNOC,EAAAA,EAAAA,gBAAe,cDMEC,kBAAkBC,MAEhD,OACER,EAAAA,cAACS,EAAAA,EAAM,KACLT,EAAAA,cAAA,WACEA,EAAAA,cAAA,WACEA,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIU,MAAO,CAAEC,aAAc,SAAU,UACpCN,EAAMO,KAAIpB,IAAA,IAAC,KAAEqB,GAAMrB,EAAA,OAClBQ,EAAAA,cAAA,WACEA,EAAAA,cAACc,EAAAA,KAAI,CAACC,GAAI,UAAYF,EAAKG,YAAYC,MACrCjB,EAAAA,cAAA,UAAI,IAAEa,EAAKG,YAAYE,OACvBlB,EAAAA,cAAA,UAAI,IAAEa,EAAKG,YAAYG,KAAK,KAC5BnB,EAAAA,cAAA,SAAG,IAAEa,EAAKG,YAAYI,QAAQ,MAE5B,OAKP,EAMN,MAAMC,EAAOA,IAClBrB,EAAAA,cAACsB,EAAAA,EAAW,CAACJ,MAAO,4BAA6BD,KAAM,W","sources":["webpack://www.dmccarthy.org/./src/hooks/useTheme.js","webpack://www.dmccarthy.org/./src/components/Layout.js","webpack://www.dmccarthy.org/./src/pages/posts.js","webpack://www.dmccarthy.org/./src/hooks/graphql.js"],"sourcesContent":["// Packages\nimport { useCallback, useState, useEffect } from \"react\";\n\n/**\n * Initilizes theme and provides logic for changing themes\n * @returns {Array} returns array with current theme and toggle theme function\n */\nconst useTheme = () => {\n  const item = \"dmccarthy-theme\";\n  let [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = useCallback(() => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n      localStorage.setItem(item, \"dark\");\n    }\n    if (theme === \"dark\") {\n      setTheme(\"light\");\n      localStorage.setItem(item, \"light\");\n    }\n  }, [theme]);\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem(item);\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  return [theme, toggleTheme];\n};\n\nexport default useTheme;\n","// Packages\nimport React, { useEffect } from \"react\";\n\n// Components\nimport useTheme from \"@hooks/useTheme\";\nimport Navbar from \"@components/Navbar\";\nimport Footer from \"@components/Footer\";\n\n// Styles\nimport \"@styles/global.scss\";\n\n/**\n *  A wrapper for site pages including Navbar and Footer\n * @param {Object} children Contains HTML Object of everything inside of it.\n * @returns {Object} The layout wrapper used in each webpage\n */\nconst Layout = ({ children }) => {\n  // Light/Dark Theme updating\n  const [theme, toggleTheme] = useTheme();\n\n  // Updates HTML class according to theme\n  useEffect(() => {\n    const root = document.documentElement;\n\n    if (theme === \"dark\") {\n      root?.classList.remove(\"theme--light\");\n      root?.classList.add(\"theme--dark\");\n    }\n    if (theme === \"light\") {\n      root?.classList.remove(\"theme--dark\");\n      root?.classList.add(\"theme--light\");\n    }\n  }, [theme]);\n\n  return (\n    <div>\n      <Navbar theme={theme} toggle={toggleTheme} />\n      <>{children}</>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","// Packages\nimport React from \"react\";\nimport { Link } from \"gatsby\";\n\n// Components\nimport DefaultHead from \"@components/Head\";\nimport FetchMarkdown from \"@hooks/graphql\";\nimport Layout from \"../components/Layout\";\n\nconst BlogPage = () => {\n  const posts = FetchMarkdown().allMarkdownRemark.edges;\n\n  return (\n    <Layout>\n      <div>\n        <div>\n          <div>\n            <h2 style={{ marginBottom: \"10px\" }}>Posts:</h2>\n            {posts.map(({ node }) => (\n              <div>\n                <Link to={\"/posts/\" + node.frontmatter.slug}>\n                  <h3> {node.frontmatter.title}</h3>\n                  <h4> {node.frontmatter.date} </h4>\n                  <p> {node.frontmatter.excerpt} </p>\n                </Link>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n\nexport const Head = () => (\n  <DefaultHead title={\"Blog Posts | Dan McCarthy\"} slug={\"/posts/\"} />\n);\n","import { useStaticQuery, graphql } from \"gatsby\";\n\n// Graphql Queries\nexport default function FetchMarkdown() {\n  const data = useStaticQuery(graphql`\n    query posts {\n      allMarkdownRemark {\n        edges {\n          node {\n            frontmatter {\n              title\n              slug\n              date\n              excerpt\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data;\n}\n"],"names":["useTheme","item","theme","setTheme","useState","toggleTheme","useCallback","localStorage","setItem","useEffect","savedTheme","getItem","_ref","children","root","document","documentElement","classList","remove","add","React","Navbar","toggle","Footer","BlogPage","posts","useStaticQuery","allMarkdownRemark","edges","Layout","style","marginBottom","map","node","Link","to","frontmatter","slug","title","date","excerpt","Head","DefaultHead"],"sourceRoot":""}