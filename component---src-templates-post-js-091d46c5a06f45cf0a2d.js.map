{"version":3,"file":"component---src-templates-post-js-091d46c5a06f45cf0a2d.js","mappings":"yKAgCA,MAzBiBA,KACf,MAAMC,EAAO,kBACb,IAAI,EAACC,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,SAEjC,MAAMC,GAAcC,EAAAA,EAAAA,cAAY,KAChB,UAAVJ,IACFC,EAAS,QACTI,aAAaC,QAAQP,EAAM,SAEf,SAAVC,IACFC,EAAS,SACTI,aAAaC,QAAQP,EAAM,SAC7B,GACC,CAACC,IASJ,OAPAO,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaH,aAAaI,QAAQV,GACpCS,GACFP,EAASO,EACX,GACC,IAEI,CAACR,EAAOG,EAAY,E,oBCc7B,MA3BeO,IAAmB,IAAlB,SAAEC,GAAUD,EAE1B,MAAOV,EAAOG,GAAeL,IAgB7B,OAbAS,EAAAA,EAAAA,YAAU,KACR,MAAMK,EAAOC,SAASC,gBAER,SAAVd,IACFY,SAAAA,EAAMG,UAAUC,OAAO,gBACvBJ,SAAAA,EAAMG,UAAUE,IAAI,gBAER,UAAVjB,IACFY,SAAAA,EAAMG,UAAUC,OAAO,eACvBJ,SAAAA,EAAMG,UAAUE,IAAI,gBACtB,GACC,CAACjB,IAGFkB,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,EAAM,CAACnB,MAAOA,EAAOoB,OAAQjB,IAC9Be,EAAAA,cAAAA,EAAAA,SAAA,KAAGP,GACHO,EAAAA,cAACG,EAAAA,EAAM,MACH,C,gECTV,UAvBiBX,IAA4B,IAA3B,KAAEY,EAAI,YAAEC,GAAab,EACrC,OACEQ,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAACO,EAAAA,EAAW,CACVC,MAAOH,EAAYG,MAAQ,kBAC3BC,KAAO,IAAGJ,EAAYI,UAExBT,EAAAA,cAAA,OACEU,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SAGVf,EAAAA,cAAA,UAAKK,EAAYG,OACjBR,EAAAA,cAAA,SAAIK,EAAYW,UAEX,C","sources":["webpack://www.dmccarthy.org/./src/hooks/useTheme.js","webpack://www.dmccarthy.org/./src/components/Layout.js","webpack://www.dmccarthy.org/./src/templates/post.js"],"sourcesContent":["// Packages\nimport { useCallback, useState, useEffect } from \"react\";\n\n/**\n * Initilizes theme and provides logic for changing themes\n * @returns {Array} returns array with current theme and toggle theme function\n */\nconst useTheme = () => {\n  const item = \"dmccarthy-theme\";\n  let [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = useCallback(() => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n      localStorage.setItem(item, \"dark\");\n    }\n    if (theme === \"dark\") {\n      setTheme(\"light\");\n      localStorage.setItem(item, \"light\");\n    }\n  }, [theme]);\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem(item);\n    if (savedTheme) {\n      setTheme(savedTheme);\n    }\n  }, []);\n\n  return [theme, toggleTheme];\n};\n\nexport default useTheme;\n","// Packages\nimport React, { useEffect } from \"react\";\n\n// Components\nimport useTheme from \"@hooks/useTheme\";\nimport Navbar from \"@components/Navbar\";\nimport Footer from \"@components/Footer\";\n\n// Styles\nimport \"@styles/global.scss\";\n\n/**\n *  A wrapper for site pages including Navbar and Footer\n * @param {Object} children Contains HTML Object of everything inside of it.\n * @returns {Object} The layout wrapper used in each webpage\n */\nconst Layout = ({ children }) => {\n  // Light/Dark Theme updating\n  const [theme, toggleTheme] = useTheme();\n\n  // Updates HTML class according to theme\n  useEffect(() => {\n    const root = document.documentElement;\n\n    if (theme === \"dark\") {\n      root?.classList.remove(\"theme--light\");\n      root?.classList.add(\"theme--dark\");\n    }\n    if (theme === \"light\") {\n      root?.classList.remove(\"theme--dark\");\n      root?.classList.add(\"theme--light\");\n    }\n  }, [theme]);\n\n  return (\n    <div>\n      <Navbar theme={theme} toggle={toggleTheme} />\n      <>{children}</>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","// Packages\nimport React from \"react\";\n\n// Components\nimport DefaultHead from \"@components/Head\";\nimport Layout from \"@components/Layout\";\n\nconst BlogPage = ({ data, pageContext }) => {\n  return (\n    <Layout>\n      <DefaultHead\n        title={pageContext.title + \" | Dan McCarthy\"}\n        slug={`/${pageContext.slug}/`}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"90vh\",\n        }}\n      >\n        <h1>{pageContext.title}</h1>\n        <p>{pageContext.content}</p>\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n"],"names":["useTheme","item","theme","setTheme","useState","toggleTheme","useCallback","localStorage","setItem","useEffect","savedTheme","getItem","_ref","children","root","document","documentElement","classList","remove","add","React","Navbar","toggle","Footer","data","pageContext","Layout","DefaultHead","title","slug","style","display","flexDirection","justifyContent","alignItems","height","content"],"sourceRoot":""}